SELECT * FROM sales;
SELECT * FROM stores;
SELECT * FROM products;
SELECT * FROM inventory;

-- Revenue Performance & Growth Analysis

-- Q.1 what is the total revenue generated by the company

SELECT ROUND(SUM(p.product_price * s.units)::NUMERIC, 2) as Revenue
FROM sales s
JOIN products p
ON s.product_id = p.product_id;

-- Q.2 How does the revenue generated in 2022 compare to 2023

WITH yearly_rev AS (
	SELECT DATE_PART('year', s.date) AS year,
		ROUND(SUM(p.product_price * s.units)::NUMERIC, 2) as Revenue,
		LAG(ROUND(SUM(p.product_price * s.units)::NUMERIC, 2)) OVER (ORDER BY DATE_PART('year', s.date)) AS prev_revenue
	FROM sales s
	JOIN products p
		ON s.product_id = p.product_id
	GROUP BY year
	)
	
SELECT year, revenue,
       ROUND((100 * (revenue - prev_revenue) / prev_revenue)::NUMERIC, 2) AS growth_ratio
FROM yearly_rev;

-- Q.3 Which stores generate the highest sales revenue? 

SELECT st.store_name, st.store_city, st.store_location,
	ROUND(SUM(p.product_price * s.units)::NUMERIC, 2) AS revenue
FROM stores st
JOIN sales s
	ON st.store_id = s.store_id
JOIN products p
	ON s.product_id = p.product_id
GROUP BY st.store_name, st.store_city, st.store_location 
ORDER BY revenue DESC
LIMIT 5;

-- Q.4 What are the seasonal sales trends by store location type?

WITH cm_revenue_cte AS (
	SELECT 
		store_location,
		DATE_TRUNC('month', s.date) AS month_start,
		ROUND(SUM(p.product_price * s.units)::NUMERIC, 2) AS CM_revenue
	FROM stores st
	JOIN sales s 
		ON st.store_id = s.store_id
	JOIN products p 
		ON s.product_id = p.product_id
	GROUP BY store_location, DATE_TRUNC('month', s.date)
	), 
pm_revenue_cte AS(
	SELECT store_location,
  		TO_CHAR(month_start, 'MM-YY') AS month_year,
  		CM_revenue,
  		LAG(CM_revenue) OVER(PARTITION BY store_location ORDER BY month_start) AS PM_revenue
	FROM cm_revenue_cte
	ORDER BY store_location, month_start
	)
	
SELECT store_location,
  	month_year,
  	CM_revenue,
    PM_revenue,
	ROUND(100 * (CM_revenue - PM_revenue) / PM_revenue, 0) AS mom_growth
FROM pm_revenue_cte;

--Q.5 Which store location types yield the highest sales revenue and YoY growth?

WITH yearly_revenue AS (
	SELECT store_location,
		TO_CHAR(s.date, 'yyyy') AS year,
		ROUND(SUM(p.product_price * s.units)::NUMERIC, 2) AS CY_revenue,
		LAG(ROUND(SUM(p.product_price * s.units)::NUMERIC, 2)) 
			OVER(PARTITION BY store_location ORDER BY TO_CHAR(s.date, 'yyyy')) AS PY_revenue
	FROM stores st
	JOIN sales s 
		ON st.store_id = s.store_id
	JOIN products p 
		ON s.product_id = p.product_id
	GROUP BY store_location, TO_CHAR(s.date, 'yyyy')
	)
	
SELECT store_location, 
	year, 
	CY_revenue, 
	PY_revenue,
	ROUND(100 * (CY_revenue - PY_revenue) / PY_revenue, 0) AS mom_growth
FROM yearly_revenue
ORDER BY CY_revenue DESC;

-- Q.6 How do sales performance metrics vary by city, and which cities show the highest potential?  

SELECT st.store_city, 
	ROUND(SUM(p.product_price * s.units)::NUMERIC, 2) AS revenue, 
	ROUND(
        (100.0 * 
		 (SUM(s.units * (p.product_price - p.product_cost))) / SUM(s.units * p.product_price))::NUMERIC
        , 2
    ) AS profit_margin_perc
FROM stores st
JOIN sales s 
	ON st.store_id = s.store_id
JOIN products p 
	ON s.product_id = p.product_id
GROUP BY st.store_city
ORDER BY revenue DESC;

-- Q.7 Is there a relationship between the number of stores in a city and the revenue generated there?

SELECT st.store_city, COUNT(st.store_id) AS stores_num, 
	ROUND(SUM(p.product_price * s.units)::NUMERIC, 2) AS revenue
FROM stores st
JOIN sales s 
	ON st.store_id = s.store_id
JOIN products p 
	ON s.product_id = p.product_id
GROUP BY st.store_city
ORDER BY revenue DESC, stores_num DESC;

-- Product Performance

-- Q.8 Which product categories contribute the most to sales revenue across different stores?  

WITH revenue_cte AS (
	SELECT st.store_name, p.product_name, ROUND(SUM(p.product_price * s.units)::NUMERIC, 2) AS revenue, 
	RANK() OVER(PARTITION BY st.store_name ORDER BY SUM(p.product_price * s.units) DESC) AS rank
	FROM stores st
	JOIN sales s
		ON st.store_id = s.store_id
	JOIN products p
		ON s.product_id = p.product_id
	GROUP BY st.store_name, p.product_name
	ORDER BY st.store_name, revenue DESC
	)
	
SELECT store_name, product_name, revenue
FROM revenue_cte
WHERE rank = 1;

-- Q.9 Which products have the highest inventory turnover rates across stores? 

WITH sales_agg AS (
  SELECT product_id, SUM(units) AS qty_sold
  FROM sales
  GROUP BY product_id
),
inventory_agg AS (
  SELECT product_id, AVG(stock_on_hand) AS avg_stock
  FROM inventory
  GROUP BY product_id
)
SELECT p.product_name,
	ROUND((sa.qty_sold / NULLIF(ia.avg_stock, 0))::NUMERIC, 2) AS turnover_rate
FROM sales_agg sa
JOIN inventory_agg ia 
	ON sa.product_id = ia.product_id
JOIN products p 
	ON p.product_id = sa.product_id
ORDER BY turnover_rate DESC;

-- Q.10 What are the top-selling products by revenue and units sold across all stores?  

SELECT p.product_name, SUM(s.units) AS qty_sold,
	ROUND(SUM(p.product_price * s.units)::NUMERIC, 2) as revenue
FROM sales s
  JOIN products p 
	ON p.product_id = s.product_id
GROUP BY p.product_name
ORDER BY revenue DESC, qty_sold DESC;

-- Store Operations & Profitability

-- Q.11 Which stores experience the most frequent product stockouts? 

WITH stockout_cte AS (
	SELECT store_name, 
	COUNT(CASE WHEN stock_on_hand = 0 THEN 1 END) AS stockout_count
	FROM stores st
	JOIN inventory i
		ON st.store_id = i.store_id
	GROUP BY store_name
	ORDER BY stockout_count DESC
	)
	
SELECT store_name, stockout_count
FROM stockout_cte
WHERE stockout_count != 0;

-- and what products are frequently stocked out in those stores. 

SELECT store_name, product_name
FROM stores st
JOIN inventory i ON st.store_id = i.store_id
JOIN products p ON i.product_id = p.product_id
WHERE stock_on_hand = 0
ORDER BY store_name, product_name;

-- Q.12 Which stores have the highest profit margins

SELECT st.store_name, 
	ROUND(
        (100.0 * 
		 (SUM(s.units * (p.product_price - p.product_cost))) / SUM(s.units * p.product_price))::NUMERIC
        , 2
    ) AS profit_margin_perc
FROM stores st
JOIN sales s
	ON st.store_id = s.store_id
JOIN products p
	ON s.product_id = p.product_id
GROUP BY st.store_name
ORDER BY profit_margin_perc DESC;

-- Q.13 How does store age (years since opening) correlate with sales performance?  

SELECT 
  st.store_name,
  ((CURRENT_DATE - st.store_open_date)/ 365) AS store_age,
  ROUND(SUM(p.product_price * s.units)::NUMERIC, 2) AS revenue
FROM stores st
JOIN sales s 
	ON st.store_id = s.store_id
JOIN products p 
	ON s.product_id = p.product_id
GROUP BY st.store_name, st.store_open_date
ORDER BY revenue DESC, store_age ;

--Q.14 Which stores have sales significantly below the company average?

WITH rev AS (
	SELECT st.store_name, ROUND(SUM(p.product_price * s.units)::NUMERIC, 2) AS revenue
	FROM stores st
	JOIN sales s 
		ON st.store_id = s.store_id
	JOIN products p 
		ON s.product_id = p.product_id
	GROUP BY st.store_name
),
avg_rev AS (
	SELECT ROUND(AVG(revenue),2) AS avg_revenue 
	FROM rev
)

SELECT r.store_name, r.revenue, a.avg_revenue
FROM rev r
CROSS JOIN avg_rev a
WHERE r.revenue < a.avg_revenue
ORDER BY r.revenue ASC;

-- Q.15 What are the estimated inventory requirements for new stores based on existing store type profiles?  

 WITH qty AS (
  SELECT 
    st.store_location,
    p.product_name,
    DATE_TRUNC('month', s.date) AS month,
    SUM(s.units) AS qty_sold
  FROM sales s
  JOIN stores st ON st.store_id = s.store_id
  JOIN products p ON p.product_id = s.product_id
  GROUP BY st.store_location, p.product_name, month
)

SELECT 
  store_location,
  product_name,
  ROUND(AVG(qty_sold) * 1.5, 0) AS recommended_initial_stock
FROM qty
GROUP BY store_location, product_name
ORDER BY store_location, recommended_initial_stock DESC;

